<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ustc.jobsearch.mapper.JobMapper">
  <resultMap id="BaseResultMap" type="com.ustc.jobsearch.entity.Job">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="URL" jdbcType="VARCHAR" property="url" />
    <result column="company_name" jdbcType="VARCHAR" property="companyName" />
    <result column="job_name" jdbcType="VARCHAR" property="jobName" />
    <result column="job_loccation" jdbcType="VARCHAR" property="jobLoccation" />
    <result column="degree_request" jdbcType="VARCHAR" property="degreeRequest" />
    <result column="exp_request" jdbcType="VARCHAR" property="expRequest" />
    <result column="salary_down" jdbcType="INTEGER" property="salaryDown" />
    <result column="salary_up" jdbcType="INTEGER" property="salaryUp" />
    <result column="hire_member" jdbcType="INTEGER" property="hireMember" />
    <result column="creat_time" jdbcType="TIMESTAMP" property="creatTime" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, URL, company_name, job_name, job_loccation, degree_request, exp_request, salary_down, 
    salary_up, hire_member, creat_time, content, end_time
  </sql>
  <select id="selectByExample" parameterType="com.ustc.jobsearch.entity.JobExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from job
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from job
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from job
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ustc.jobsearch.entity.JobExample">
    delete from job
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ustc.jobsearch.entity.Job">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into job (URL, company_name, job_name, 
      job_loccation, degree_request, exp_request, 
      salary_down, salary_up, hire_member, 
      creat_time, content, end_time
      )
    values (#{url,jdbcType=VARCHAR}, #{companyName,jdbcType=VARCHAR}, #{jobName,jdbcType=VARCHAR}, 
      #{jobLoccation,jdbcType=VARCHAR}, #{degreeRequest,jdbcType=VARCHAR}, #{expRequest,jdbcType=VARCHAR}, 
      #{salaryDown,jdbcType=INTEGER}, #{salaryUp,jdbcType=INTEGER}, #{hireMember,jdbcType=INTEGER}, 
      #{creatTime,jdbcType=TIMESTAMP}, #{content,jdbcType=VARCHAR}, #{endTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ustc.jobsearch.entity.Job">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into job
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="url != null">
        URL,
      </if>
      <if test="companyName != null">
        company_name,
      </if>
      <if test="jobName != null">
        job_name,
      </if>
      <if test="jobLoccation != null">
        job_loccation,
      </if>
      <if test="degreeRequest != null">
        degree_request,
      </if>
      <if test="expRequest != null">
        exp_request,
      </if>
      <if test="salaryDown != null">
        salary_down,
      </if>
      <if test="salaryUp != null">
        salary_up,
      </if>
      <if test="hireMember != null">
        hire_member,
      </if>
      <if test="creatTime != null">
        creat_time,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="companyName != null">
        #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="jobName != null">
        #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="jobLoccation != null">
        #{jobLoccation,jdbcType=VARCHAR},
      </if>
      <if test="degreeRequest != null">
        #{degreeRequest,jdbcType=VARCHAR},
      </if>
      <if test="expRequest != null">
        #{expRequest,jdbcType=VARCHAR},
      </if>
      <if test="salaryDown != null">
        #{salaryDown,jdbcType=INTEGER},
      </if>
      <if test="salaryUp != null">
        #{salaryUp,jdbcType=INTEGER},
      </if>
      <if test="hireMember != null">
        #{hireMember,jdbcType=INTEGER},
      </if>
      <if test="creatTime != null">
        #{creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ustc.jobsearch.entity.JobExample" resultType="java.lang.Long">
    select count(*) from job
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update job
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.url != null">
        URL = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.companyName != null">
        company_name = #{record.companyName,jdbcType=VARCHAR},
      </if>
      <if test="record.jobName != null">
        job_name = #{record.jobName,jdbcType=VARCHAR},
      </if>
      <if test="record.jobLoccation != null">
        job_loccation = #{record.jobLoccation,jdbcType=VARCHAR},
      </if>
      <if test="record.degreeRequest != null">
        degree_request = #{record.degreeRequest,jdbcType=VARCHAR},
      </if>
      <if test="record.expRequest != null">
        exp_request = #{record.expRequest,jdbcType=VARCHAR},
      </if>
      <if test="record.salaryDown != null">
        salary_down = #{record.salaryDown,jdbcType=INTEGER},
      </if>
      <if test="record.salaryUp != null">
        salary_up = #{record.salaryUp,jdbcType=INTEGER},
      </if>
      <if test="record.hireMember != null">
        hire_member = #{record.hireMember,jdbcType=INTEGER},
      </if>
      <if test="record.creatTime != null">
        creat_time = #{record.creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update job
    set id = #{record.id,jdbcType=INTEGER},
      URL = #{record.url,jdbcType=VARCHAR},
      company_name = #{record.companyName,jdbcType=VARCHAR},
      job_name = #{record.jobName,jdbcType=VARCHAR},
      job_loccation = #{record.jobLoccation,jdbcType=VARCHAR},
      degree_request = #{record.degreeRequest,jdbcType=VARCHAR},
      exp_request = #{record.expRequest,jdbcType=VARCHAR},
      salary_down = #{record.salaryDown,jdbcType=INTEGER},
      salary_up = #{record.salaryUp,jdbcType=INTEGER},
      hire_member = #{record.hireMember,jdbcType=INTEGER},
      creat_time = #{record.creatTime,jdbcType=TIMESTAMP},
      content = #{record.content,jdbcType=VARCHAR},
      end_time = #{record.endTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ustc.jobsearch.entity.Job">
    update job
    <set>
      <if test="url != null">
        URL = #{url,jdbcType=VARCHAR},
      </if>
      <if test="companyName != null">
        company_name = #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="jobName != null">
        job_name = #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="jobLoccation != null">
        job_loccation = #{jobLoccation,jdbcType=VARCHAR},
      </if>
      <if test="degreeRequest != null">
        degree_request = #{degreeRequest,jdbcType=VARCHAR},
      </if>
      <if test="expRequest != null">
        exp_request = #{expRequest,jdbcType=VARCHAR},
      </if>
      <if test="salaryDown != null">
        salary_down = #{salaryDown,jdbcType=INTEGER},
      </if>
      <if test="salaryUp != null">
        salary_up = #{salaryUp,jdbcType=INTEGER},
      </if>
      <if test="hireMember != null">
        hire_member = #{hireMember,jdbcType=INTEGER},
      </if>
      <if test="creatTime != null">
        creat_time = #{creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ustc.jobsearch.entity.Job">
    update job
    set URL = #{url,jdbcType=VARCHAR},
      company_name = #{companyName,jdbcType=VARCHAR},
      job_name = #{jobName,jdbcType=VARCHAR},
      job_loccation = #{jobLoccation,jdbcType=VARCHAR},
      degree_request = #{degreeRequest,jdbcType=VARCHAR},
      exp_request = #{expRequest,jdbcType=VARCHAR},
      salary_down = #{salaryDown,jdbcType=INTEGER},
      salary_up = #{salaryUp,jdbcType=INTEGER},
      hire_member = #{hireMember,jdbcType=INTEGER},
      creat_time = #{creatTime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=VARCHAR},
      end_time = #{endTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>